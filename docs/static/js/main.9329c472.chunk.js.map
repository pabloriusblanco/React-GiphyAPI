{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cate","type","value","onChange","element","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","fixed_height","GifGridItem","className","src","alt","substring","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACC,GACvBV,EAAcU,EAAQC,OAAOH,QAkBrBI,YAAY,kC,+BCxBfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAAM,iDAA0CC,UAAUH,GAApD,sBADG,mCADI,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,aAAaZ,QAVnB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,uBAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,EAAOO,UAAU,EAAE,IAAI7B,aCF3B8B,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZhB,mBAAS,CAC/BuB,KAAM,GACNc,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WAENzB,EAAQC,GACHyB,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAItB,CAACrB,IAEGsB,EDd0BK,CAAa3B,GAAjCa,EAFwB,EAE7BN,KAAac,EAFgB,EAEhBA,QAErB,OACI,qCACI,6BAAKrB,IAEJqB,GAAW,wCAEZ,qBAAKL,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEdxBiB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,IAFf,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAI9B,OACI,qCACI,qBAAKiC,UAAU,sBACf,8CACA,qBAAKA,UAAU,uBAAf,SACA,cAAC,EAAD,CAAajC,cAAeA,MAE5B,qBAAKiC,UAAU,mBAKPa,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAUA,GACLA,U,MCjBjC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9329c472.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (element) => {\r\n        setInputValue(element.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cate => [inputValue, ...cate]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                placeholder='Escriba un gif para buscar'>\r\n            </input>\r\n        </form>\r\n    );\r\n}\r\n\r\n    //obliga enviar X propiedad\r\n    AddCategory.propTypes = {\r\n        setCategories: PropTypes.func.isRequired,\r\n    }","\r\n\r\nexport const getGifs = async (category) => {\r\n    const apiKey = 'm1BBXCFcQUbA9sf0r6s7iuumcwgPXiEI';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=` + apiKey;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.fixed_height.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className='card animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{(title).substring(0,16).trim()}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p>Loading</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(img =>\r\n                        <GifGridItem\r\n                            key={img.id} //se necesita poner aca                        \r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false,\r\n                })\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <div className='background_Header'></div>\r\n            <h1>GifExpertApp</h1>\r\n            <div className='Subheader_Cointainer'>\r\n            <AddCategory setCategories={setCategories} />\r\n            </div>\r\n            <div className='horizontalLine'></div>\r\n\r\n\r\n            \r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid\r\n                            category={category}\r\n                            key={category} />\r\n                    )\r\n                }\r\n            \r\n\r\n        </>);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//Componente GifExpertApp\n"],"sourceRoot":""}